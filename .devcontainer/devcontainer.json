// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.106.0/containers/docker-existing-dockerfile
{
	"name": "Dockerized development environment",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"llvm-vs-code-extensions.vscode-clangd",
		"vadimcn.vscode-lldb"
	],

	"appPort": [
		"9160:9160/tcp",
		"9161:9161/tcp",
		"9162:9162/tcp",
		"9163:9163/tcp",
		"9164:9164/tcp",
		"9165:9165/tcp",
		"9166:9166/tcp",
		"9167:9167/tcp",
		"9168:9168/tcp",
		"9169:9169/tcp",
		"9160:9160/udp",
		"9161:9161/udp",
		"9162:9162/udp",
		"9163:9163/udp",
		"9164:9164/udp",
		"9165:9165/udp",
		"9166:9166/udp",
		"9167:9167/udp",
		"9168:9168/udp",
		"9169:9169/udp",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing git.
	// "postCreateCommand": "apt-get update && apt-get install -y git",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust # , "--network=host"
	"runArgs": [ "--privileged", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
